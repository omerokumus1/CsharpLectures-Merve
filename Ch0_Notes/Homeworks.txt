- Bölünebilme kurallarıyla kalan bulmak

HW1: Girilen bir sayının 5'in katı olup olmadığını anlayan program
HW2: Java book, ch3 Q3.1, Q3.2 
HW3: C# book, mail ile gönderilen sorular
Bonus: zaman kalırsa Ch2 soruları

HW4: Java book ch 3.9 Case Study: Computing Body Mass Index
    Notes: System.out.println() = Console.WriteLine(),
            System.out.print() = Console.Write(),
            System.exit() = programı sonlandırır.
            
HW5: Java kitabı chapter 3 egzersizlerinden 3.5, 3.6, 3.9, 3.12, 3.14, 3.15, 3.16, 3.17, 3.18, 3.19
    
HW6: While loop içerisindeki toplama quizini 4 işlem quizine çevir. Burada işlemler rastgele gelmeli. 10 tane soru yeterli.
        modelleme yapılarak switch case kullanılabilir.
        Next step: Program istatistiksel yaklaşımda bulunabilir. Yani; Kaç toplama işleminin kaçı doğru veya kaç bölme işleminden kaç tanesi
                    doğru gibi.
                 
------
HW7: Verilen bir stringin: 
        a. baş harfini büyük yapan 
        b. sonuna nokta koyan
        c. içindeki noktalama işaretlerini sayan
        d. içindeki türkçe karakteri sayan
                programları yaz
      
HW8: Verilen bir stringi:
        a. büyük harfe çevir
        b. küçük harfe çevir
        c. her kelimenin baş harfini büyük harf yap
        d. Sadece türkçe karakterleri büyük harf diğerlerini ise küçük yap
                programları yaz. Stringiler için ToString, ToUpper vb To ile başlayan fonksiyonlar replace, insert vb gibi genel string değiştiren fonksiyonlar yasak. 
                Ne kadar az fonksiyon o kadar iyi. Char için ToUpper ToLower gibi methodlar kullanılabilir.
                
-------

HW9: Verilen bir string için;
        a. aynısından üreten (Clone)
        b. içinde herhangi bir karakter olup olmadığını bulan (Contains)
        c. verilen iki index ile alt string alan (substring methodu gibi)
        d. verilen başka bir string ile başlayıp başlamadığını kontrol eden
        e. verilen başka bir string ile bitip bitmediğini kontrol eden
        f. verilen bir karakterin baştan kaçıncı indexte olduğunu bulan (birden fazla varsa ilk index verilir)
        g. verilen bir karakterin sondan kaçıncı indexte olduğunu bulan (birden fazla varsa ilk index verilir)
        
HW10: iki stringin eşitliğini kontrol eden program
                
-------

HW11: Verilen bir string için;
        +*a. verilen bir indexine verilen bir karakteri koy. 
            Örn; "abc" stringinin 1. indexine 'X' koyarsan "aXbc" üretmeli
        *b. verilen bir indexteki karakteri sil. 
            Örn; "abc" stringinin 1. indexindeki karakteri silersen "ac" üretmeli
        *c. verilen bir indexteki karakteri verilen başka bir karakter ile değiş
            Örn; "abc" stringinin 1. indexindeki karakteri X ile değişirsen "aXc" üretmeli
        d. verilen bir stringin başındaki ve sonundaki boşlukları sil
            Örn; "   abc  " -> "abc"
        +e. verilen bir stringin sadece başındaki boşlukları sil
            Örn; "   abc  " -> "abc  "
        f. verilen bir stringin sadece sonundaki boşlukları sil
                       Örn; "   abc  " -> "   abc"
                       
                       
------

HW12: Verilen bir string için;
        a. verilen bir indexe verilen bir stringi yerleştir
            Örn; "abc" stringinin 1. indexine "XYZ" koyarsan "aXYZbc" üretmeli
        b. verilen bir karakteri tüm stringden sil
            Örn; "abbc" stringinden b karakterini silersen "ac" üretmeli
        c. verilen bir karakterden verilen sayıda sil
            Örn; "abb bbc" stringinden b karakterini 2 kez silersen "a bbc" üretmeli
                var olan toplam sayıdan daha fazla sayı verilirse tüm hepsini sil
                Örn; "abbc" stringinden b karakterini 3 kez silersen "ac" üretmeli
        d. verilen bir karakteri verilen bir indexten başlayıp verilen sayı kadar sil
            Örn; "abb bbc" stringinden b karakterini 2. indexten itibaren 2 kez silersen "ab bc" üretmeli
                indexten sonrası için var olan toplam sayıdan daha fazla sayı verilirse hepsini sil.
                index kontrolü yap
        e. verilen bir karakterin hepsini verilen başka bir karakterle değiştir
            Örn; "abbc" stringinde b karakteri X ile değiştirirsen "aXXc" üretmeli
        f. verilen bir karakteri verilen başka bir karakterle verilen sayı kadar değiştir
            Örn; "abb bbc" stringinde b karakterini X ile 2 tane değiştirirsen "aXX bbc" üretmeli
        g. verilen bir karakteri verilen başka bir karakterle verilen bir indexten başlayıp verilen sayı kadar değiştir
            Örn; "abb bbc" stringinde b karakterini 2. indexten başlayıp 2 tane değiştirirsen "abX Xbc" üretmeli 