- Bölünebilme kurallarıyla kalan bulmak

+HW1: Girilen bir sayının 5'in katı olup olmadığını anlayan program
+HW2: Java book, ch3 Q3.1, Q3.2 
+HW3: C# book, mail ile gönderilen sorular
Bonus: zaman kalırsa Ch2 soruları

+HW4: Java book ch 3.9 Case Study: Computing Body Mass Index
    Notes: System.out.println() = Console.WriteLine(),
            System.out.print() = Console.Write(),
            System.exit() = programı sonlandırır.
            
+HW5: Java kitabı chapter 3 egzersizlerinden 3.5, 3.6, 3.9, 3.12, 3.14, 3.15, 3.16, 3.17, 3.18, 3.19
    
+HW6: While loop içerisindeki toplama quizini 4 işlem quizine çevir. Burada işlemler rastgele gelmeli. 10 tane soru yeterli.
        modelleme yapılarak switch case kullanılabilir.
        Next step: Program istatistiksel yaklaşımda bulunabilir. Yani; Kaç toplama işleminin kaçı doğru veya kaç bölme işleminden kaç tanesi
                    doğru gibi.
                 
------
+HW7: Verilen bir stringin: 
        a. baş harfini büyük yapan 
        b. sonuna nokta koyan
        c. içindeki noktalama işaretlerini sayan
        d. içindeki türkçe karakteri sayan
                programları yaz
      
+HW8: Verilen bir stringi:
        a. büyük harfe çevir
        b. küçük harfe çevir
        c. her kelimenin baş harfini büyük harf yap
        d. Sadece türkçe karakterleri büyük harf diğerlerini ise küçük yap
                programları yaz. Stringiler için ToString, ToUpper vb To ile başlayan fonksiyonlar replace, insert vb gibi genel string değiştiren fonksiyonlar yasak. 
                Ne kadar az fonksiyon o kadar iyi. Char için ToUpper ToLower gibi methodlar kullanılabilir.
                
-------

+HW9: Verilen bir string için;
        a. aynısından üreten (Clone)
        b. içinde herhangi bir karakter olup olmadığını bulan (Contains)
        c. verilen iki index ile alt string alan (substring methodu gibi)
        d. verilen başka bir string ile başlayıp başlamadığını kontrol eden
        e. verilen başka bir string ile bitip bitmediğini kontrol eden
        f. verilen bir karakterin baştan kaçıncı indexte olduğunu bulan (birden fazla varsa ilk index verilir)
        g. verilen bir karakterin sondan kaçıncı indexte olduğunu bulan (birden fazla varsa ilk index verilir)
        
+HW10: iki stringin eşitliğini kontrol eden program
                
-------

+HW11: Verilen bir string için;
        +*a. verilen bir indexine verilen bir karakteri koy. 
            Örn; "abc" stringinin 1. indexine 'X' koyarsan "aXbc" üretmeli
        *b. verilen bir indexteki karakteri sil. 
            Örn; "abc" stringinin 1. indexindeki karakteri silersen "ac" üretmeli
        *c. verilen bir indexteki karakteri verilen başka bir karakter ile değiş
            Örn; "abc" stringinin 1. indexindeki karakteri X ile değişirsen "aXc" üretmeli
        d. verilen bir stringin başındaki ve sonundaki boşlukları sil
            Örn; "   abc  " -> "abc"
        +e. verilen bir stringin sadece başındaki boşlukları sil
            Örn; "   abc  " -> "abc  "
        f. verilen bir stringin sadece sonundaki boşlukları sil
                       Örn; "   abc  " -> "   abc"
                       
                       
------

+HW12: Verilen bir string için;
        +a. verilen bir indexe verilen bir stringi yerleştir
            Örn; "abc" stringinin 1. indexine "XYZ" koyarsan "aXYZbc" üretmeli
        +b. verilen bir karakteri tüm stringden sil
            Örn; "abbc" stringinden b karakterini silersen "ac" üretmeli
        +c. verilen bir karakterden verilen sayıda sil
            Örn; "abb bbc" stringinden b karakterini 2 kez silersen "a bbc" üretmeli
                var olan toplam verilen karakter sayısından daha fazla sayı verilirse tüm hepsini sil
                Örn; "abbc" stringinden b karakterini 3 kez silersen "ac" üretmeli
        +d. verilen bir karakteri verilen bir indexten başlayıp verilen sayı kadar sil
            Örn; "abb bbc" stringinden b karakterini 2. indexten itibaren 2 kez silersen "ab bc" üretmeli
                indexten sonrası için var olan toplam sayıdan daha fazla sayı verilirse hepsini sil.
                index kontrolü yap
        +e. verilen bir karakterin hepsini verilen başka bir karakterle değiştir
            Örn; "abbc" stringinde b karakteri X ile değiştirirsen "aXXc" üretmeli
        +f. verilen bir karakteri verilen başka bir karakterle verilen sayı kadar değiştir
            Örn; "abb bbc" stringinde b karakterini X ile 2 tane değiştirirsen "aXX bbc" üretmeli
        +g. verilen bir karakteri verilen başka bir karakterle verilen bir indexten başlayıp verilen sayı kadar değiştir
            Örn; "abb bbc" stringinde b karakterini 2. indexten başlayıp 2 tane değiştirirsen "abX Xbc" üretmeli
            
------
+HW13: Java kitabı, ch5 Loops problemleri: 5.4, 5.5, 5.6, 5.8, 5.9, 5.10, 5.11, 5.12, 5.13

------
HW14: Java kitabı, ch5 Loops problemleri:   5.12 ile 5.13'ü tek satırda yazdır (İpucu: Math fonksiyonları kullan)
                                            5.14'ü yorum satırlarındaki örnekteki mantığı kullanarak kodlayın
                                            5.14-2'yi 5.14'deki mantıkla kodlayın
                                            Euclid greatest common divisor algoritmasını implement edin (khan academy)
                                            
-----
HW15:   5.18.d. Sağa dayalı ters dik üçgen - Ödev
        5.18.b. Sola dayalı ters dik üçgen - Ödev
        5.18-2 Display patterns below by start (*)
             a. 5.18'deki şekilleri yıldız ile içi boş ve dolu olarak çizdir
             b. İçi dolu ikizkenar üçgen
             c. İçi boş ikizkenar üçgen
             d. İçi boş dikdörtgen
             e. İçi dolu dikdörtgen
             f. İçi boş baklava dilimi
             g. İçi dolu baklava dilimi

-----
HW16:   1- Birden n'ye kadar olan sayıların toplamını bulan fonksiyon yaz
            public static int sumUntil(int n)
        2- Birden n'ye kadar olan çift sayıların toplamını bulan fonksiyon yaz
            public static int sumEvensUntil(int n)
        3- Birden n'ye kadar olan tek sayıların toplamını bulan fonksiyon yaz
            public static int sumOddsUntil(int n)
        4- Rastgele bir ay üreten bir fonksiyon yaz. Her çalıştırıldığında farklı bir ay ekrana yazılacak. Örn; Ocak, Temmuz gibi aylar.
            public static void randomMonth()
        5- Ch2_Exercise1_BMI örneğini fonksiyona çevir.
        6- 3 tane integer sayıyı sıralayan fonksiyonu yaz.
        7- Java exercise 3.9'daki soruyu fonksiyon ile yaz 
        8- En az 3 haneli verilen bir sayının palindrome sayı olup olmadığını bulan fonksiyon yaz. Örn; 121 palindrome, 123 değil
        
-----
HW17:   1- Capitalize (baş harfi büyük yap) fonksiyonu yaz
        2- Add period (sonuna nokta koy) fonksiyonu yaz
        3- Count punctuations fonksiyonu yaz
        4- Count turkish letters fonksiyonu yaz
        5- Count uppercase letters fonksiyonu yaz
        6- Count words fonksiyonu yaz
        7- ToUpper fonksiyonu yaz
        8- ToLower fonksiyonu yaz
        9- Capitalize each word fonksiyonu yaz
        11- Capitalize turkish letters, lower others fonksiyonu yaz
        12- Clone fonksiyonu yaz
        13- Contains character fonksiyonu yaz
        
-----
HW18:   1- Substring fonksiyonu yaz. Hatalı inputlar için kullanıcı uyar. 
        2- StartsWith fonksiyonunu yaz.        
        3- EndsWith fonksiyonunu yaz.   
        4- IndexOf fonksiyonunu yaz.
        5- LastIndexOf fonksiyonunu yaz.
        6- Equals fonksiyonunu yaz.
        7- Insert character fonksiyonunu yaz. index kontrolü yap (Substring fonksiyonundaki gibi).
        8- Remove a character at an index fonksiyonunu yaz. index kontrolü yap (Substring fonksiyonundaki gibi).
        9- Remove all characters** fonksiyonunu yaz. Karakter varsa siler yoksa silmez
        10- Remove a character as given number of times (2 tane sil, 5 tane sil vb) fonk. yaz. index ve kaç kez silineceğinin kontrollerini yap
        11- Remove a character starting from a given index as given number of times (2. indexten başla 3 tane sil gibi). index ve kaç kez silineceğinin kontrollerini yap


-----
HW19:   1- Replace a character at an index with another given character (index kontrolü yap)
        2- Replace string: verilen bir stringi verilen başka bir string ile değiştir. Sadece ilk eşleşme için değişim olacak
            Örn; ab--ab--ab stringinde ab stringini xd ile değişirsek xd--ab--ab olur
        3- Replace all strings: verilen bir stringi verilen başka bir string ile değiştir. Tüm eşleşmeler değiştirlecek
            Örn; ab--ab--ab stringinde ab stringini xd ile değişirsek xd--xd--xd olur
        4- Trim spaces: Stringin başındaki ve sonundaki boşlukları sil
        5- Trim end: Stringin sonundaki boşlukları sil
        6- Trim start: Stringin başındaki boşlukları sil
        7- CompareTo**: İki stringi sözlük sırasına göre kıyasla. soldaki küçükse -1, ikisi eşitse 0, soldaki büyükse 1 bastır